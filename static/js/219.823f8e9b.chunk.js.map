{"version":3,"file":"static/js/219.823f8e9b.chunk.js","mappings":"8QAEaA,EAAiBC,EAAAA,EAAAA,GAAH,mJAUdC,EAAiBD,EAAAA,EAAAA,GAAH,2LAUdE,EAAoBF,EAAAA,EAAAA,IAAH,yCAIjBG,EAAiBH,EAAAA,EAAAA,EAAH,6G,6BCsB3B,EA/Ba,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,6GAEqBC,EAAAA,EAAAA,gBAAoBN,GAFzC,OAESO,EAFT,OAGGC,QAAQC,IAAIF,GACZH,EAAQG,GAJX,gDAMGC,QAAQC,IAAI,KAAMC,SANrB,yDAAD,sDASD,GAAE,CAACV,IAGFG,EAAKQ,SACH,SAAChB,EAAD,UACGQ,EAAKS,KAAI,gBAtBOC,EAsBJC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAApB,OACR,UAACnB,EAAD,YACE,SAACC,EAAD,CAAmBmB,KAxBNJ,EAwB4BG,EAvBnDH,EAAK,UAAMK,EAAAA,GAAN,OAAkBL,GAHvB,qFA2BU,SAACd,EAAD,UAAiBe,KACjB,UAACf,EAAD,yBAA4BgB,OAHTD,EADb,KAUjB,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledCastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n  margin: 0;\n  margin-top: 20px;\n  padding: 0;\n`;\n\nexport const StyledCastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n  padding: 0 0 10px;\n  width: calc((100% - 20px) / 4);\n  text-align: center;\n`;\n\nexport const StyledCastPicture = styled.img`\n  width: 100px;\n`;\n\nexport const StyledCastText = styled.p`\n  font-size: 12px;\n  font-weight: bold;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {\n  StyledCastList,\n  StyledCastItem,\n  StyledCastPicture,\n  StyledCastText,\n} from './Cast.styled';\nimport { api } from 'pages/Home/Home';\nimport { IMAGE_URL } from 'components/MovieCard/MovieCard';\n\nconst imageNotFound =\n  'https://thumbs.dreamstime.com/b/page-not-found-error-illustration-35157161.jpg';\n\nconst isImageAvailable = image =>\n  image ? `${IMAGE_URL}${image}` : imageNotFound;\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    (async function fetchMovieCast() {\n      try {\n        const res = await api.getMovieCredits(movieId);\n        console.log(res);\n        setCast(res);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    cast.length && (\n      <StyledCastList>\n        {cast.map(({ name, character, profile_path }) => (\n          <StyledCastItem key={name}>\n            <StyledCastPicture src={isImageAvailable(profile_path)} />\n            <StyledCastText>{name}</StyledCastText>\n            <StyledCastText>Character: {character}</StyledCastText>\n          </StyledCastItem>\n        ))}\n      </StyledCastList>\n    )\n  );\n};\n\nexport default Cast;\n"],"names":["StyledCastList","styled","StyledCastItem","StyledCastPicture","StyledCastText","movieId","useParams","useState","cast","setCast","useEffect","api","res","console","log","message","length","map","image","name","character","profile_path","src","IMAGE_URL"],"sourceRoot":""}